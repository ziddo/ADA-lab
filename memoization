#include<iostream>
using namespace std;
long int dp[500][500];
long int change(long int coins[] ,long int n,int long k)//n coin k =req sum
{

if (k == 0) return 1;
if (k < 0 || n <= 0) return 0;
if(dp[n][k]==-1)
dp[n][k] = change(coins, n, k-coins[n-1]) + change(coins, n-1, k );

return dp[n][k];
}
int main()
{
long int t;
cin >>t;
while(t--)
{
long int n;
cin>>n;
long int coins[n];
for (int i=0;i<n;i++) {="" cin="">>coins[i];
}
long int req;
cin>>req;

for(long int i=0;i<=n;i++)
for(long int j=0;j<=req;j++)
dp[i][j]=-1;
cout<<change(coins,n,req)<<endl; }="" return="" 0;="" }="">
